name: CI

# 1. Core Workflow Requirements: Triggers and Concurrency
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 2. Security: Set default permissions to read-only
permissions:
  contents: read

jobs:
  test:
    name: Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    # 3. Matrix Testing Strategy
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-2025]

    steps:
      # 2. Security: Action Pinning
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      # 4. Poetry Integration, Caching, and Debugging
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipx
          pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Dump environment details (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "OS/Runner: ${{ runner.os }}"
          echo "Python version:"
          python --version
          echo "Poetry version:"
          poetry --version
          echo "Poetry Environment Info:"
          poetry env info
          echo "PATH:"
          echo $PATH

      - name: Dump environment details (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "OS/Runner: ${{ runner.os }}"
          Write-Host "Python version:"
          python --version
          Write-Host "Poetry version:"
          poetry --version
          Write-Host "Poetry Environment Info:"
          poetry env info
          Write-Host "PATH:"
          echo $env:PATH

      - name: Install dependencies
        run: poetry install --no-interaction -vv --with dev

      - name: Verify Dependency Tree
        run: poetry show --tree

      # 5. Comprehensive Testing and Code Coverage
      - name: Run Unit Tests
        # As the test structure isn't split, all tests in `tests/` are run here.
        # This can be adjusted to `tests/unit` or by marker `-m "not integration"` later.
        run: poetry run pytest -vv tests/ --cov=./ --cov-report=xml:coverage-unit.xml

      - name: Upload Unit Test coverage to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage-unit.xml
          flags: ${{ matrix.os }}-py${{ matrix.python-version }}-unit
          fail_ci_if_error: true
          verbose: true

      - name: Run Integration Tests (Placeholder)
        id: integration-tests
        run: |
          echo "No integration tests found. Creating an empty coverage report to maintain workflow structure."
          echo '<?xml version="1.0" ?><coverage version="1" timestamp="1" lines-valid="0" lines-covered="0" line-rate="0" branches-valid="0" branches-covered="0" branch-rate="0" complexity="0"><sources></sources><packages></packages></coverage>' > coverage-integration.xml

      - name: Upload Integration Test coverage to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage-integration.xml
          flags: ${{ matrix.os }}-py${{ matrix.python-version }}-integration
          fail_ci_if_error: true
          verbose: true

      # 6. Failure Handling and Artifacts
      - name: Upload reports and logs on failure
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        if: failure()
        with:
          name: ci-failure-reports-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            coverage-unit.xml
            coverage-integration.xml